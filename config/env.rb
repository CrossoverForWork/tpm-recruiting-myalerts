# General
EB_APP_NAME               = ENV['EB_APP_NAME'] || 'alerts-generator-wrk'
EB_ENV_NAME               = ENV['EB_ENV_NAME']

LOGGER_INDEX              = ENV['LOGGER_INDEX'] || 'mya_output_eb'
LOGGER_LEVEL              = ENV['LOGGER_LEVEL']

SCHEMA_VALIDATION_ENABLED = ENV['SCHEMA_VALIDATION_ENABLED'] != 'false'

# In milliseconds
REQUEST_TIME_THRESHOLD    = (ENV['REQUEST_TIME_THRESHOLD'] || '20000').to_f

# Alerts-Generator specific
ALERTS_BUILDER_ENABLED    = ENV['ALERTS_BUILDER_ENABLED'] == 'true'
ALERTS_BUILDER_URL        = ENV['ALERTS_BUILDER_URL']
CLIENTS_API_URL           = ENV['CLIENTS_API_URL']

QUEUE_EMAIL_ALERTS_URL    = ENV['QUEUE_EMAIL_ALERTS_URL']
QUEUE_EXTERNAL_ALERTS_URL = ENV['QUEUE_EXTERNAL_ALERTS_URL']
QUEUE_TRACKERS            = ENV['QUEUE_TRACKERS']

TOPIC_ALERTS_SMS          = ENV['TOPIC_ALERTS_SMS']
TRACKERS_WORKER_URL       = ENV['TRACKERS_WORKER_URL']

# Alerts-Builder specific
QUEUE_TEMPLATE_INTERPOLATION = ENV['QUEUE_TEMPLATE_INTERPOLATION']
QUEUE_TEMPLATE_INTERPOLATION_DIGEST = ENV['QUEUE_TEMPLATE_INTERPOLATION_DIGEST']
TRACKIF_TEMPLATING_URL = ENV['TRACKIF_TEMPLATING_URL']

# Redis
REDIS = {
  'adapter' => 'redis',
  'host' => ENV['REDIS_HOST'],
  'port' => ENV['REDIS_PORT'],
  'db' => ENV['REDIS_DB'],
  'namespace' => ENV['REDIS_NAMESPACE']
}.freeze

# Database
DB_ADAPTER = ENV['DB_ADAPTER']
DB_USER = ENV['DB_USER']
DB_PASSWORD = ENV['DB_PASSWORD']
DB_HOST = ENV['DB_HOST']
DB_PORT = ENV['DB_PORT']
DB_NAME = ENV['DB_NAME']
DB_POOL = ENV['DB_POOL']
DB_LOG = ENV['DB_LOG']
